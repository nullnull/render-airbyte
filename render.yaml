databases:
  - name: airbyte-db
    plan: starter
    databaseName: airbyte
    user: airbyte

services:
  - type: pserv
    env: docker
    name: airbyte-init
    dockerfilePath: ./dockerfiles/init/Dockerfile

  # seed:
  #   image: airbyte/seed:${VERSION}
  #   container_name: airbyte-data-seed
  #   # Pre-populate the volume if it is empty.
  #   # See: https://docs.docker.com/storage/volumes/#populate-a-volume-using-a-container
  #   volumes:
  #     - data:/app/seed
  # scheduler:
  #   image: airbyte/scheduler:${VERSION}
  #   container_name: airbyte-scheduler
  #   environment:
  #     - DATABASE_USER=${DATABASE_USER}
  #     - DATABASE_PASSWORD=${DATABASE_PASSWORD}
  #     - DATABASE_URL=jdbc:postgresql://db:5432/${DATABASE_DB}
  #     - WAIT_BEFORE_HOSTS=5
  #     - WAIT_HOSTS_TIMEOUT=45
  #     - WAIT_HOSTS=db:5432
  #     - WORKSPACE_ROOT=${WORKSPACE_ROOT}
  #     - WORKSPACE_DOCKER_MOUNT=${WORKSPACE_DOCKER_MOUNT}
  #     - LOCAL_DOCKER_MOUNT=${LOCAL_DOCKER_MOUNT}
  #     - CONFIG_ROOT=${CONFIG_ROOT}
  #     - TRACKING_STRATEGY=${TRACKING_STRATEGY}
  #     - AIRBYTE_VERSION=${VERSION}
  #     - AIRBYTE_ROLE=${AIRBYTE_ROLE:-}
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - workspace:${WORKSPACE_ROOT}
  #     - ${LOCAL_ROOT}:${LOCAL_ROOT}
  #     - data:${CONFIG_ROOT}
  - type: web
    env: docker
    name: airbyte-server
    dockerfilePath: ./dockerfiles/server/Dockerfile
    disk:
      name: workspace
      mountPath: /tmp/workspace
      sizeGB: 10
      # - name: data
      #   mountPath: /data
      #   sizeGB: 10
    envVars:
      - fromGroup: airbyte-env-var-groups
      - key: DATABASE_PASSWORD
        fromDatabase:
          name: airbyte-db
          property: password
      - key: DATABASE_URL
        fromDatabase:
          name: airbyte-db
          property: connectionString

  - type: web
    env: docker
    name: airbyte-webapp
    dockerfilePath: ./dockerfiles/webapp/Dockerfile
    envVars:
      - fromGroup: airbyte-env-var-groups
      - key: DATABASE_PASSWORD
        fromDatabase:
          name: airbyte-db
          property: password
      - key: DATABASE_URL
        fromDatabase:
          name: airbyte-db
          property: connectionString

  # airbyte-temporal:
  #   image: temporalio/auto-setup:1.7.0
  #   container_name: airbyte-temporal
  #   ports:
  #     - 7233:7233
  #   environment:
  #     - DB=postgresql
  #     - DB_PORT=5432
  #     - POSTGRES_USER=${DATABASE_USER}
  #     - POSTGRES_PWD=${DATABASE_PASSWORD}
  #     - POSTGRES_SEEDS=db
  #     - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
  #   volumes:
  #     - ./temporal/dynamicconfig:/etc/temporal/config/dynamicconfig

envVarGroups:
  - name: airbyte-env-var-groups
    envVars:
      - key: DATABASE_USER
        value: airbyte
      - key: WAIT_BEFORE_HOSTS
        value: 5
      - key: WAIT_HOSTS_TIMEOUT
        value: 45
      - key: WAIT_HOSTS
        value: dpg-c14nvr5c2rvqrf0e6j1g:5432
      - key: CONFIG_ROOT
        value: /data
      - key: TRACKING_STRATEGY
        value: segment
      - key: AIRBYTE_VERSION
        value: 0.17.0-alpha
      # - key: AIRBYTE_ROLE
      #   value: ${AIRBYTE_ROLE:-}
      - key: WORKSPACE_ROOT
        value: /tmp/workspace
      - key: API_URL
        value: ${API_URL}
      - key: IS_DEMO
        value: false
      # - key: PAPERCUPS_STORYTIME
      #   value: ${PAPERCUPS_STORYTIME:-}
